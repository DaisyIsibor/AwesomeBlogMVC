<!-- singlepost.handlebars -->
<div class="post">
    <h2>{{ post.title }}-<span class="post-info">{{ post.User.username }} | {{ formatDate post.createdAt }}</span></h2>
    <p>{{ post.content }}</p>
</div>

<!-- Edit and Delete Buttons -->
{{#if isAuthor}}
<div class="post-actions">
    <a href="/posts/{{post.id}}/edit" class="btn edit-post-btn">Edit Post</a>
    <button class="delete-post-btn" data-post-id="{{ post.id }}">Delete Post</button>
</div>
{{/if}}

<!-- Comments Section -->
{{#if post.comments.length}}
<div class="comments">
    <h3>Comments</h3>
    {{#each post.comments}}
    <div class="comment">
        <p><strong>Commented by:</strong> {{ this.user.username }}</p>
        <p><strong>Commented on:</strong> {{ formatDate this.createdAt }}</p>
        <p>{{ this.comment_text }}</p>

       {{#if this.isAuthor}}
        <div class="comment-actions">
            <button class="delete-comment-btn" data-comment-id="{{ this.id }}">Delete Comment</button>
        </div>
        {{/if}}
    </div>
    {{/each}}
</div>
{{else}}
<p>No comments yet.</p>
{{/if}}


<!-- Form to add a new comment -->
<form id="comment-form" class="add-comment-form" method="POST" action="/api/comments">
    <input type="hidden" id="post-id" value="{{ post.id}}">
    <textarea id="comment-text" name="comment_text" rows="3" cols="40" placeholder="Leave a Comment"></textarea><br>
    <button type="submit">Submit Comment</button>
</form>
<p>Debug Post ID: {{ post.id }}</p>


<script>
document.addEventListener('DOMContentLoaded', function() {
    // Find the delete button
    const deleteButton = document.querySelector('.delete-post-btn');

    // Define the delete handler function
    function deleteHandler(event) {
        event.preventDefault();
        const postId = event.target.dataset.postId;
        fetch(`/api/posts/${postId}`, {
            method: 'DELETE'
        })
        .then(function(response) {
            if (response.ok) {
                // Redirect to the home page
                window.location.href = '/';
            } else {
                console.error('Failed to delete post:', response.statusText);
            }
        })
        .catch(function(error) {
            console.error('Error deleting post:', error);
        });
    }

    // Add event listener to the delete button
    if (deleteButton) {
        deleteButton.addEventListener('click', deleteHandler);
    }
    

 // Delete comment buttons
    function deleteCommentHandler(event) {
        event.preventDefault();
        const commentId = event.target.dataset.commentId;
        fetch(`/api/comments/${commentId}`, {
            method: 'DELETE'
        })
        .then(function(response) {
            if (response.ok) {
                // Reload the page to update the comments list
                document.location.reload();
            } else {
                console.error('Failed to delete comment:', response.statusText);
                alert('Failed to delete the comment. Please try again later.');
            }
        })
        .catch(function(error) {
            console.error('Error deleting comment:', error);
            alert('An error occurred while processing your request.');
        });
    }

    // Add event listeners to the comment delete buttons
    const deleteCommentButtons = document.querySelectorAll('.delete-comment-btn');
    deleteCommentButtons.forEach(function(button) {
        button.addEventListener('click', deleteCommentHandler);
    });
});
</script>


{{#if logged_in}}
<script src="/js/post.js"></script>
{{/if}}